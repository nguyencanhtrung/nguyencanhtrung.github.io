I"∫<h2 id="catapult-io-components">Catapult IO components</h2>

<p>This part is a mess for me at the beginning actually at the moment also, but I will try to make more experiment. I do not really know why they have to make it so compilcated. As mentioned in the userguide, they provides 20 types of IOs (10 for Input and 10 for Output)</p>

<table>
  <tbody>
    <tr>
      <td><b>Input</b></td>
      <td><b>Output</b></td>
    </tr>
    <tr>
      <td>ccs_in</td>
      <td>ccs_out</td>
    </tr>
    <tr>
      <td>ccs_in_rdy</td>
      <td>ccs_out_prereg</td>
    </tr>
    <tr>
      <td>ccs_in_rdy_coupled</td>
      <td>ccs_out_prereg_vld</td>
    </tr>
    <tr>
      <td>ccs_in_vld</td>
      <td>ccs_out_rdy</td>
    </tr>
    <tr>
      <td>ccs_in_wait</td>
      <td>ccs_out_vld</td>
    </tr>
    <tr>
      <td>ccs_in_pipe</td>
      <td>ccs_out_wait</td>
    </tr>
    <tr>
      <td>ccs_in_buf_wait</td>
      <td>ccs_out_pipe</td>
    </tr>
    <tr>
      <td>ccs_ctrl_in_buf_wait</td>
      <td>ccs_out_buf_wait</td>
    </tr>
    <tr>
      <td>ccs_in_wait_coupled</td>
      <td>ccs_out_skidbuf_wait</td>
    </tr>
    <tr>
      <td>ccs_in_wait_szchan</td>
      <td>ccs_stallbuf</td>
    </tr>
  </tbody>
</table>

<p>Based on userguide, it describes:</p>
<ul>
  <li>Having VALID or READY signal or not.
    <ul>
      <li><code class="language-plaintext highlighter-rouge">_rdy</code> ready signal is available</li>
      <li><code class="language-plaintext highlighter-rouge">vld</code> valid signal is available</li>
      <li><code class="language-plaintext highlighter-rouge">wait</code> <code class="language-plaintext highlighter-rouge">pipe</code> both ready and valid is available</li>
    </ul>
  </li>
  <li>Data registerd in IO component or not</li>
  <li>Handshaking signals registered in the IO component or not</li>
  <li>Process registerd in the main process ot not</li>
</ul>

<p>What are IO component and main process?</p>

<p>Cai User guide nhi shit</p>

<h2 id="wait-controller">Wait Controller</h2>

<p>M·ªói IO component c√≥ ƒëu√¥i <code class="language-plaintext highlighter-rouge">_wait</code> handshake khi compile ra RTL s·∫Ω sinh ra m·ªôt kh·ªëi <code class="language-plaintext highlighter-rouge">Wait Controller</code>. T∆∞∆°ng ·ª©ng v·ªõi IO components ta s·∫Ω c√≥ 2 lo·∫°i <code class="language-plaintext highlighter-rouge">Wait Controller</code>: Input v√† Output</p>

<p>Trong RTL, netlist, c√°c kh·ªëi <code class="language-plaintext highlighter-rouge">Wait Controller</code> s·∫Ω ƒë∆∞·ª£c m√¥ t·∫£ v·ªõi ƒëu√¥i <code class="language-plaintext highlighter-rouge">*:rsci</code> v√† <code class="language-plaintext highlighter-rouge">staller</code></p>

<h3 id="input-wait-controller">Input wait controller</h3>

<h3 id="output-wait-controller">Output wait controller</h3>

<h2 id="axi4-stream-interface">AXI4 Stream interface</h2>

<p>In order for Catapult recognizes <code class="language-plaintext highlighter-rouge">_TLAST</code> and <code class="language-plaintext highlighter-rouge">_TUSER</code> correctly, it is required to declare <code class="language-plaintext highlighter-rouge">Stream_t</code> in the following order:</p>

<figure class="highlight"><pre><code class="language-c--" data-lang="c++"><span class="k">struct</span> <span class="nc">Stream_t</span> <span class="p">{</span>
  <span class="n">uint128</span> <span class="n">TDATA</span><span class="p">;</span>
  <span class="kt">bool</span>    <span class="n">TUSER</span><span class="p">;</span>
  <span class="kt">bool</span>    <span class="n">TLAST</span><span class="p">;</span>
<span class="p">};</span></code></pre></figure>

<p><code class="language-plaintext highlighter-rouge">_TLAST</code> must be in the last.</p>

<p>Catapult <b>does not support byte positioning</b>, thereforem it requires</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">_TSTRB</code>, <code class="language-plaintext highlighter-rouge">_TKEEP</code> of input are all <code class="language-plaintext highlighter-rouge">1s</code>, if not it will assert <code class="language-plaintext highlighter-rouge">WARNING</code> when running RTL simulation.</li>
</ul>

<p>On the other hand, developers cannot assign value for <code class="language-plaintext highlighter-rouge">_TSTRB</code> or <code class="language-plaintext highlighter-rouge">_TKEEP</code>, they are assigned to <code class="language-plaintext highlighter-rouge">1s</code> at output by default.</p>

<h2 id="axi4-lite-interface">AXI4 Lite interface</h2>

:ET